{"version":3,"file":"component---src-pages-index-tsx-0fcd8356cb0ce67b4c06.js","mappings":"8LAAO,MAAMA,EAAeC,IAC1B,GAAgB,MAAZA,EACF,MAAO,GAGT,MACOC,EAAGC,GAAYF,EAASG,MADV,qBAIrB,MAAM,UAFaD,EAASE,QAAQ,2BAA4B,GAErC,ECRtB,I,oBCgBA,MAkCMC,EAAOC,OAAOC,OAAO,CAAC,EAAG,CAAEC,KAlCpBC,IAA8B,IAA7B,SAAEC,GAAqBD,EAC1C,OAAOE,EAAAA,EAAAA,KAAA,MAAIC,UDZqB,WCYWF,SAAEA,GAAc,EAiCfG,KA1B1BC,IAA0B,IAAzB,KAAEC,GAAiBD,EACtC,MAAM,YAAEE,EAAW,SAAEC,GAAaF,GAC5B,MAAEG,EAAK,YAAEC,EAAW,KAAEC,GAASJ,QAAAA,EAAe,CAAC,GAC/C,gBAAEK,GAAoBJ,EAE5B,OACEN,EAAAA,EAAAA,KAAA,MAAIC,UD9B0B,WC8BMF,UAClCY,EAAAA,EAAAA,MAACC,EAAAA,KAAI,CAACC,GAAIzB,EAAYsB,GAAkBT,UD5BjB,WC4B4CF,SAAA,EACjEC,EAAAA,EAAAA,KAACc,EAAAA,GAAO,CAACC,KAAK,IAAIC,OAAO,OAAOf,UD5BV,WC4BsCF,SACzDQ,QAAAA,EAAS,aAEI,MAAfC,EAAsB,MACrBR,EAAAA,EAAAA,KAACiB,EAAAA,GAAI,CAACF,KAAK,IAAIG,GAAG,MAAMjB,UDlCE,WCkCgCF,SACvDS,IAGI,MAARC,EAAe,MACdT,EAAAA,EAAAA,KAACiB,EAAAA,GAAI,CAACF,KAAK,IAAIG,GAAG,MAAMjB,UDxCL,WCwCgCF,SAChDU,QAIJ,IChCIU,EAAMrB,IAA8C,IAADsB,EAAAC,EAAA,IAA5C,YAAEb,EAAW,MAAED,EAAK,SAAER,GAAiBD,EACzD,MAAM,KAAEwB,IAASC,EAAAA,EAAAA,gBAAe,cAW1BC,EAAkBhB,GAAec,EAAKG,aAAajB,YACnDkB,EAAgC,QAApBN,EAAGE,EAAKG,oBAAY,IAAAL,OAAA,EAAjBA,EAAmBb,MAExC,OACEI,EAAAA,EAAAA,MAAAgB,EAAAA,SAAA,CAAA5B,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAAD,SAAQ2B,EAAkBnB,EAAK,MAAMmB,EAAiBnB,KACtDP,EAAAA,EAAAA,KAAA,QAAM4B,KAAK,cAAcC,QAASL,KAClCxB,EAAAA,EAAAA,KAAA,QAAM8B,SAAS,WAAWD,QAAStB,KACnCP,EAAAA,EAAAA,KAAA,QAAM8B,SAAS,iBAAiBD,QAASL,KACzCxB,EAAAA,EAAAA,KAAA,QAAM8B,SAAS,UAAUD,QAAQ,aACjC7B,EAAAA,EAAAA,KAAA,QAAM4B,KAAK,eAAeC,QAAQ,aAClC7B,EAAAA,EAAAA,KAAA,QAAM4B,KAAK,kBAAkBC,SAA0B,QAAjBR,EAAAC,EAAKG,oBAAY,IAAAJ,OAAA,EAAjBA,EAAmBU,SAAM,MAC/D/B,EAAAA,EAAAA,KAAA,QAAM4B,KAAK,gBAAgBC,QAAStB,KACpCP,EAAAA,EAAAA,KAAA,QAAM4B,KAAK,sBAAsBC,QAASL,IACzCzB,IACA,EC1BP,MAZkBD,IAAiD,IAAhD,KAAEkC,GAAyClC,EAC5D,OACEE,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAACN,EAAKG,KAAI,CAAAE,SACPiC,EAAKC,OAAOC,MAAMC,KAAK/B,IACfJ,EAAAA,EAAAA,KAACN,EAAKQ,KAAI,CAAeE,KAAMA,GAAfA,EAAKgC,SAG5B,EAMH,MAAMC,EAAOA,KACXrC,EAAAA,EAAAA,KAACmB,EAAG,CAACZ,MAAM,K","sources":["webpack://goni-log/./src/utils/get-post-path.ts","webpack://goni-log/./src/components/post/index.css.ts","webpack://goni-log/./src/components/post/index.tsx","webpack://goni-log/./src/components/seo/index.tsx","webpack://goni-log/./src/pages/index.tsx"],"sourcesContent":["export const getPostPath = (filePath: string | null) => {\n  if (filePath == null) {\n    return '';\n  }\n\n  const postRootPath = '/src/pages/posts/';\n  const [_, postPath] = filePath.split(postRootPath);\n  const withoutMdx = postPath.replace(/(\\/index\\.mdx$)|(\\.mdx$)/, '');\n\n  return `/posts/${withoutMdx}`;\n};\n","import \"src/components/post/index.css.ts.vanilla.css!=!../../../node_modules/.pnpm/@vanilla-extract+webpack-plugin@2.3.1_@types+node@20.10.6_terser@5.26.0_webpack@5.89.0/node_modules/@vanilla-extract/webpack-plugin/virtualFileLoader/dist/vanilla-extract-webpack-plugin-virtualFileLoader.cjs.js?{\\\"fileName\\\":\\\"src/components/post/index.css.ts.vanilla.css\\\",\\\"source\\\":\\\"Ll8zNDZpOWcwIHsKICBkaXNwbGF5OiBmbGV4OwogIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47CiAgZ2FwOiAyLjVyZW07Cn0KLl8zNDZpOWcxIHsKICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4yczsKfQouXzM0Nmk5ZzE6aG92ZXIgewogIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNHB4KTsKfQouXzM0Nmk5ZzIgewogIHRleHQtZGVjb3JhdGlvbjogbm9uZTsKfQouXzM0Nmk5ZzMgewogIGNvbG9yOiB2YXIoLS1ncmF5LTEyKTsKfQouXzM0Nmk5ZzQgewogIG1hcmdpbi10b3A6IDAuNXJlbTsKICBjb2xvcjogdmFyKC0tZ3JheS0xMik7Cn0KLl8zNDZpOWc1IHsKICBtYXJnaW4tdG9wOiAwLjNyZW07CiAgY29sb3I6IHZhcigtLWdyYXktMTApOwp9\\\"}!../../../node_modules/.pnpm/@vanilla-extract+webpack-plugin@2.3.1_@types+node@20.10.6_terser@5.26.0_webpack@5.89.0/node_modules/@vanilla-extract/webpack-plugin/extracted.js\"\nexport var postItemContainerCss = '_346i9g1';\nexport var postItemDateCss = '_346i9g5';\nexport var postItemDescriptionCss = '_346i9g4';\nexport var postItemLinkCss = '_346i9g2';\nexport var postItemTitleCss = '_346i9g3';\nexport var postListContainerCss = '_346i9g0';","import { Link, PageProps } from 'gatsby';\nimport { getPostPath } from '../../utils/get-post-path';\nimport { ReactNode } from 'react';\nimport {\n  postItemContainerCss,\n  postItemDateCss,\n  postItemDescriptionCss,\n  postItemLinkCss,\n  postItemTitleCss,\n  postListContainerCss,\n} from './index.css';\nimport { Heading, Text } from '@radix-ui/themes';\n\ninterface ListProps {\n  children: ReactNode;\n}\n\nexport const List = ({ children }: ListProps) => {\n  return <ul className={postListContainerCss}>{children}</ul>;\n};\n\ninterface ItemProps {\n  node: PageProps<Queries.IndexPageQuery>['data']['allMdx']['nodes'][number];\n}\n\nexport const Item = ({ node }: ItemProps) => {\n  const { frontmatter, internal } = node;\n  const { title, description, date } = frontmatter ?? {};\n  const { contentFilePath } = internal;\n\n  return (\n    <li className={postItemContainerCss}>\n      <Link to={getPostPath(contentFilePath)} className={postItemLinkCss}>\n        <Heading size=\"6\" weight=\"bold\" className={postItemTitleCss}>\n          {title ?? 'No Title'}\n        </Heading>\n        {description == null ? null : (\n          <Text size=\"3\" as=\"div\" className={postItemDescriptionCss}>\n            {description}\n          </Text>\n        )}\n        {date == null ? null : (\n          <Text size=\"1\" as=\"div\" className={postItemDateCss}>\n            {date}\n          </Text>\n        )}\n      </Link>\n    </li>\n  );\n};\n\nexport const Post = Object.assign({}, { List, Item });\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport { useStaticQuery, graphql } from 'gatsby';\n\ninterface Props {\n  title: string;\n  description?: string;\n  children?: React.ReactNode;\n}\n\nexport const SEO = ({ description, title, children }: Props) => {\n  const { site } = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n          description\n        }\n      }\n    }\n  `);\n\n  const metaDescription = description || site.siteMetadata.description;\n  const defaultTitle = site.siteMetadata?.title;\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  );\n};\n","import { PageProps, graphql } from 'gatsby';\nimport { Post } from '../components/post';\nimport { SEO } from '../components/seo';\n\nconst IndexPage = ({ data }: PageProps<Queries.IndexPageQuery>) => {\n  return (\n    <div>\n      <Post.List>\n        {data.allMdx.nodes.map((node) => {\n          return <Post.Item key={node.id} node={node} />;\n        })}\n      </Post.List>\n    </div>\n  );\n};\n\nexport default IndexPage;\n\nexport const Head = () => {\n  return <SEO title=\"í™ˆ\" />;\n};\n\nexport const query = graphql`\n  query IndexPage {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMdx(sort: { frontmatter: { date: DESC } }) {\n      nodes {\n        id\n        frontmatter {\n          title\n          date(formatString: \"YYYY-MM-DD\")\n          description\n        }\n        internal {\n          contentFilePath\n        }\n      }\n    }\n  }\n`;\n"],"names":["getPostPath","filePath","_","postPath","split","replace","Post","Object","assign","List","_ref","children","_jsx","className","Item","_ref2","node","frontmatter","internal","title","description","date","contentFilePath","_jsxs","Link","to","Heading","size","weight","Text","as","SEO","_site$siteMetadata","_site$siteMetadata2","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","_Fragment","name","content","property","author","data","allMdx","nodes","map","id","Head"],"sourceRoot":""}