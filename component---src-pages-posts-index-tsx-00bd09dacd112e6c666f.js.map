{"version":3,"file":"component---src-pages-posts-index-tsx-00bd09dacd112e6c666f.js","mappings":"4KAgBO,MAkCMA,EAAOC,OAAOC,OAAO,CAAC,EAAG,CAAEC,KAlCpBC,IAA8B,IAA7B,SAAEC,GAAqBD,EAC1C,OAAOE,EAAAA,EAAAA,KAAA,MAAIC,UCXqB,WDWWF,SAAEA,GAAc,EAiCfG,KA1B1BC,IAA0B,IAAzB,KAAEC,GAAiBD,EACtC,MAAM,YAAEE,EAAW,OAAEC,GAAWF,GAC1B,MAAEG,EAAK,YAAEC,EAAW,KAAEC,GAASJ,QAAAA,EAAe,CAAC,GAC/C,KAAEK,GAASJ,QAAAA,EAAU,CAAC,EAE5B,OACEN,EAAAA,EAAAA,KAAA,MAAIC,UC7B0B,WD6BMF,UAClCY,EAAAA,EAAAA,MAACC,EAAAA,KAAI,CAACC,GAAIH,QAAAA,EAAQ,IAAKT,UC3BA,WD2B2BF,SAAA,EAChDC,EAAAA,EAAAA,KAACc,EAAAA,GAAO,CAACC,KAAK,IAAIC,OAAO,OAAOf,UC3BV,WD2BsCF,SACzDQ,QAAAA,EAAS,aAEI,MAAfC,EAAsB,MACrBR,EAAAA,EAAAA,KAACiB,EAAAA,GAAI,CAACF,KAAK,IAAIG,GAAG,MAAMjB,UCjCE,WDiCgCF,SACvDS,IAGI,MAARC,EAAe,MACdT,EAAAA,EAAAA,KAACiB,EAAAA,GAAI,CAACF,KAAK,IAAIG,GAAG,MAAMjB,UCvCL,WDuCgCF,SAChDU,QAIJ,G,8EE/BF,MAAMU,EAAMrB,IAA8C,IAADsB,EAAAC,EAAA,IAA5C,YAAEb,EAAW,MAAED,EAAK,SAAER,GAAiBD,EACzD,MAAM,KAAEwB,IAASC,EAAAA,EAAAA,gBAAe,cAW1BC,EAAkBhB,GAAec,EAAKG,aAAajB,YACnDkB,EAAgC,QAApBN,EAAGE,EAAKG,oBAAY,IAAAL,OAAA,EAAjBA,EAAmBb,MAExC,OACEI,EAAAA,EAAAA,MAAAgB,EAAAA,SAAA,CAAA5B,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAAD,SAAQ2B,EAAe,GAAGnB,OAAWmB,IAAiBnB,KACtDP,EAAAA,EAAAA,KAAA,QAAM4B,KAAK,cAAcC,QAASL,KAClCxB,EAAAA,EAAAA,KAAA,QAAM8B,SAAS,WAAWD,QAAStB,KACnCP,EAAAA,EAAAA,KAAA,QAAM8B,SAAS,iBAAiBD,QAASL,KACzCxB,EAAAA,EAAAA,KAAA,QAAM8B,SAAS,UAAUD,QAAQ,aACjC7B,EAAAA,EAAAA,KAAA,QAAM4B,KAAK,eAAeC,QAAQ,aAClC7B,EAAAA,EAAAA,KAAA,QAAM4B,KAAK,kBAAkBC,SAA0B,QAAjBR,EAAAC,EAAKG,oBAAY,IAAAJ,OAAA,EAAjBA,EAAmBU,SAAU,MACnE/B,EAAAA,EAAAA,KAAA,QAAM4B,KAAK,gBAAgBC,QAAStB,KACpCP,EAAAA,EAAAA,KAAA,QAAM4B,KAAK,sBAAsBC,QAASL,IACzCzB,IACA,C,kGC1BP,UAZkBD,IAAiD,IAAhD,KAAEkC,GAAyClC,EAC5D,OACEE,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAACN,EAAAA,GAAKG,KAAI,CAAAE,SACPiC,EAAKC,OAAOC,MAAMC,KAAK/B,IACfJ,EAAAA,EAAAA,KAACN,EAAAA,GAAKQ,KAAI,CAAeE,KAAMA,GAAfA,EAAKgC,SAG5B,EAMH,MAAMC,EAAOA,KACXrC,EAAAA,EAAAA,KAACmB,EAAAA,EAAG,CAACZ,MAAM,S","sources":["webpack://goni-log/./src/components/post/index.tsx","webpack://goni-log/./src/components/post/index.css.ts","webpack://goni-log/./src/components/seo/index.tsx","webpack://goni-log/./src/pages/posts/index.tsx"],"sourcesContent":["import { Link, PageProps } from 'gatsby';\nimport { ReactNode } from 'react';\nimport {\n  postItemContainerCss,\n  postItemDateCss,\n  postItemDescriptionCss,\n  postItemLinkCss,\n  postItemTitleCss,\n  postListContainerCss,\n} from './index.css';\nimport { Heading, Text } from '@radix-ui/themes';\n\ninterface ListProps {\n  children: ReactNode;\n}\n\nexport const List = ({ children }: ListProps) => {\n  return <ul className={postListContainerCss}>{children}</ul>;\n};\n\ninterface ItemProps {\n  node: PageProps<Queries.IndexPageQuery>['data']['allMdx']['nodes'][number];\n}\n\nexport const Item = ({ node }: ItemProps) => {\n  const { frontmatter, fields } = node;\n  const { title, description, date } = frontmatter ?? {};\n  const { slug } = fields ?? {};\n\n  return (\n    <li className={postItemContainerCss}>\n      <Link to={slug ?? '/'} className={postItemLinkCss}>\n        <Heading size=\"6\" weight=\"bold\" className={postItemTitleCss}>\n          {title ?? 'No Title'}\n        </Heading>\n        {description == null ? null : (\n          <Text size=\"3\" as=\"div\" className={postItemDescriptionCss}>\n            {description}\n          </Text>\n        )}\n        {date == null ? null : (\n          <Text size=\"1\" as=\"div\" className={postItemDateCss}>\n            {date}\n          </Text>\n        )}\n      </Link>\n    </li>\n  );\n};\n\nexport const Post = Object.assign({}, { List, Item });\n","import \"src/components/post/index.css.ts.vanilla.css!=!../../../node_modules/.pnpm/@vanilla-extract+webpack-plugin@2.3.16_@types+node@20.17.16_webpack@5.97.1/node_modules/@vanilla-extract/webpack-plugin/virtualFileLoader/dist/vanilla-extract-webpack-plugin-virtualFileLoader.cjs.js?{\\\"fileName\\\":\\\"src/components/post/index.css.ts.vanilla.css\\\",\\\"source\\\":\\\"Ll8zNDZpOWcwIHsKICBkaXNwbGF5OiBmbGV4OwogIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47CiAgZ2FwOiAyLjVyZW07CiAgbWFyZ2luLXRvcDogMnJlbTsKICBtYXJnaW4tYm90dG9tOiAycmVtOwp9Ci5fMzQ2aTlnMSB7CiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuMnM7Cn0KLl8zNDZpOWcxOmhvdmVyIHsKICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTRweCk7Cn0KLl8zNDZpOWcyIHsKICB0ZXh0LWRlY29yYXRpb246IG5vbmU7Cn0KLl8zNDZpOWczIHsKICBjb2xvcjogdmFyKC0tZ3JheS0xMik7Cn0KLl8zNDZpOWc0IHsKICBtYXJnaW4tdG9wOiAwLjVyZW07CiAgY29sb3I6IHZhcigtLWdyYXktMTIpOwp9Ci5fMzQ2aTlnNSB7CiAgbWFyZ2luLXRvcDogMC4zcmVtOwogIGNvbG9yOiB2YXIoLS1ncmF5LTEwKTsKfQ==\\\"}!../../../node_modules/.pnpm/@vanilla-extract+webpack-plugin@2.3.16_@types+node@20.17.16_webpack@5.97.1/node_modules/@vanilla-extract/webpack-plugin/extracted.js\"\nexport var postItemContainerCss = '_346i9g1';\nexport var postItemDateCss = '_346i9g5';\nexport var postItemDescriptionCss = '_346i9g4';\nexport var postItemLinkCss = '_346i9g2';\nexport var postItemTitleCss = '_346i9g3';\nexport var postListContainerCss = '_346i9g0';","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport { useStaticQuery, graphql } from 'gatsby';\n\ninterface Props {\n  title: string;\n  description?: string;\n  children?: React.ReactNode;\n}\n\nexport const SEO = ({ description, title, children }: Props) => {\n  const { site } = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n          description\n        }\n      }\n    }\n  `);\n\n  const metaDescription = description || site.siteMetadata.description;\n  const defaultTitle = site.siteMetadata?.title;\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  );\n};\n","import { PageProps, graphql } from 'gatsby';\nimport { Post } from '../../components/post';\nimport { SEO } from '../../components/seo';\n\nconst PostsPage = ({ data }: PageProps<Queries.PostsPageQuery>) => {\n  return (\n    <div>\n      <Post.List>\n        {data.allMdx.nodes.map((node) => {\n          return <Post.Item key={node.id} node={node} />;\n        })}\n      </Post.List>\n    </div>\n  );\n};\n\nexport default PostsPage;\n\nexport const Head = () => {\n  return <SEO title=\"Posts\" />;\n};\n\nexport const pageQuery = graphql`\n  query PostsPage {\n    allMdx(sort: { frontmatter: { date: DESC } }) {\n      nodes {\n        id\n        fields {\n          slug\n        }\n        frontmatter {\n          title\n          date(formatString: \"YYYY-MM-DD\")\n          description\n        }\n      }\n    }\n  }\n`;\n"],"names":["Post","Object","assign","List","_ref","children","_jsx","className","Item","_ref2","node","frontmatter","fields","title","description","date","slug","_jsxs","Link","to","Heading","size","weight","Text","as","SEO","_site$siteMetadata","_site$siteMetadata2","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","_Fragment","name","content","property","author","data","allMdx","nodes","map","id","Head"],"sourceRoot":""}